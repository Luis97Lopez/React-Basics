{"ast":null,"code":"var _jsxFileName = \"/home/luis/Proyectos/React/citas/src/components/Formulario.js\";\nimport React, { Fragment, useState } from 'react';\nimport uuid from 'uuid/v4';\n\nconst Formulario = ({\n  crearCita\n}) => {\n  // Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    mascota: '',\n    propietario: '',\n    fecha: '',\n    hora: '',\n    sintomas: ''\n  });\n  const [error, actualizarError] = useState(false); // Función que se ejecuta cada que el usuario escribe en un input\n\n  const actualizarState = e => {\n    actualizarCita({ ...cita,\n      [e.target.name]: e.target.value\n    });\n  }; // Cuando el usuario presiona agregar cita\n\n\n  const submitCita = e => {\n    e.preventDefault(); // Validar\n\n    if (mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\n      actualizarError(true);\n      return;\n    } // Eliminar el mensaje previo\n\n\n    actualizarError(false); // Asignar un ID\n\n    cita.id = uuid();\n    console.log(cita); // Crear la cita\n    // Reiniciar el Form\n  };\n\n  const {\n    mascota,\n    propietario,\n    fecha,\n    hora,\n    sintomas\n  } = cita;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \" Crear Cita \"), error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"alerta-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \" Todos los campos son obligatorios\") : null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitCita,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }\n  }, \" Nombre Mascota \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"mascota\",\n    className: \"u-full-width\",\n    placeHolder: \"Nombre Mascota\",\n    onChange: actualizarState,\n    value: mascota,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, \" Nombre Due\\xF1o \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"propietario\",\n    className: \"u-full-width\",\n    placeHolder: \"Nombre Due\\xF1o de la Mascota\",\n    onChange: actualizarState,\n    value: propietario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }\n  }, \" Fecha \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"fecha\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: fecha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }\n  }, \" Hora \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"time\",\n    name: \"hora\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: hora,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }\n  }, \" Sintomas \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"sintomas\",\n    className: \"u-full-width\",\n    onChange: actualizarState,\n    value: sintomas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"u-full-width button-primary\",\n    onChange: actualizarState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }\n  }, \"Agregar Cita\")));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["/home/luis/Proyectos/React/citas/src/components/Formulario.js"],"names":["React","Fragment","useState","uuid","Formulario","crearCita","cita","actualizarCita","mascota","propietario","fecha","hora","sintomas","error","actualizarError","actualizarState","e","target","name","value","submitCita","preventDefault","trim","id","console","log"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport uuid from 'uuid/v4'\n\nconst Formulario = ({crearCita}) => {\n     \n     // Crear State de Citas\n     const [cita, actualizarCita] = useState({\n          mascota: '',\n          propietario: '',\n          fecha: '',\n          hora: '',\n          sintomas: ''\n     })\n\n     const [ error, actualizarError] = useState(false)\n\n     // Función que se ejecuta cada que el usuario escribe en un input\n     const actualizarState = e => {\n          actualizarCita({\n               ...cita,\n               [e.target.name] : e.target.value\n          })\n     }\n\n\n     // Cuando el usuario presiona agregar cita\n     const submitCita = e => {\n          e.preventDefault()\n          \n          // Validar\n          if(\n               mascota.trim() === '' || propietario.trim() === '' ||\n               fecha.trim() === '' || hora.trim() === '' ||\n               sintomas.trim() === ''\n          ){\n               actualizarError(true)\n               return;\n          }\n\n          // Eliminar el mensaje previo\n          actualizarError(false)\n\n          // Asignar un ID\n          cita.id = uuid()\n          console.log(cita)\n\n          // Crear la cita\n\n          // Reiniciar el Form\n     }\n\n     const {mascota, propietario, fecha, hora, sintomas} = cita\n\n     return ( \n     <Fragment>\n          <h2> Crear Cita </h2>\n\n          { error \n          ? <p className=\"alerta-error\"> Todos los campos son obligatorios</p> \n          : null}\n\n          <form\n               onSubmit={submitCita}\n          >\n               <label> Nombre Mascota </label>\n               <input \n                    type=\"text\"\n                    name=\"mascota\"\n                    className=\"u-full-width\"\n                    placeHolder=\"Nombre Mascota\"\n                    onChange={actualizarState}\n                    value={mascota}\n               />\n\n               <label> Nombre Dueño </label>\n               <input \n                    type=\"text\"\n                    name=\"propietario\"\n                    className=\"u-full-width\"\n                    placeHolder=\"Nombre Dueño de la Mascota\"\n                    onChange={actualizarState}\n                    value={propietario}\n               />\n\n               <label> Fecha </label>\n               <input \n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={fecha}\n               />\n\n               <label> Hora </label>\n               <input \n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={hora}\n               />\n\n               <label> Sintomas </label>\n               <textarea \n                    name=\"sintomas\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState}\n                    value={sintomas}\n               ></textarea>\n\n               <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                    onChange={actualizarState}\n               >Agregar Cita</button>\n                    \n          </form>\n     </Fragment>)\n}\n \nexport default Formulario"]},"metadata":{},"sourceType":"module"}